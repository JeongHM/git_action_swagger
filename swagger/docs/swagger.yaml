openapi: 3.0.0

info:
  title: BE-SIMPLE-ORG
  version: 0.1.0
  description: 'BE SIMPLE ORG Project API'
  
  
servers:
- url: '{protocol}://{domain}/{version}'
  variables:
    protocol:
      enum:
        - http
        - https
      default: http
    domain:
      enum:
        - 127.0.0.1:3000
        - api.staging-domain.co.kr
        - api.production-domain.co.kr
      default: 127.0.0.1:3000
    version:
      enum: 
        - v1
        - v2
      default: v1


tags:
- name: 'user'
  description: '유저 관련 API'
- name: 'admin'
  description: '어드민 관련 API'
- name: 'partner'
  description: '상담사 관련 API'
- name: 'keyword'
  description: '키워드 관련 API'
- name: 'point'
  description: '포인트 관련 API'
- name: 'schedule'
  description: '스케쥴링 관련 API'

security: 
- X_API_KEY: []


paths:
  /user/signup:
    post:
      tags: 
      - user
      summary: 피상담자 회원가입 API
      description: 피상담자가 회원가입 시 사용하는 API 입니다.
      security: 
      - X_API_KEY: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        201:
          $ref: '#/components/responses/Created'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        
  /user/signin:
    post:
      tags: 
      - user
      summary: 피상담자 / 상담사 로그인 API
      description: 피상담자 / 상담사 로그인 시 사용하는 API 입니다.
      security: 
      - X_API_KEY: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signIn'
      responses:
        200:
          $ref: '#/components/responses/Success'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
          
  /user/logout:
    post:
      tags: 
      - user
      summary: 피상담자 / 상담사 로그아웃 API
      description: 피상담자 / 상담사 로그아웃 시 사용하는 API 입니다. (해당 API 사용 여부는 불분명)
      security: 
      - X_API_KEY: []
      - X_ACCESS_TOKEN: []
      responses:
        200:
          $ref: '#/components/responses/Success'
          
          
  /user/detail:
    get:
      tags: 
      - user
      summary: 피상담자 상세정보 API
      description: 피상담자 (본인) 상세정보를 볼 때 사용됩니다. <br> 파라미터 정보가 필요 없는건 x-access-token에서 확인이 가능해서 따로 파라미터를 받지 않습니다.
      security: 
      - X_API_KEY: []
      - X_API_USER_ID: []
      - X_ACCESS_TOKEN: []
      responses:
        200:
          description: 'Success'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Success'
                - type: object
                  properties:
                    result:
                      type: object
                      properties:
                        user:
                          type: object
                          $ref: '#/components/schemas/user'
          
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
          
  /user/email/validate:
    get:
      tags: 
      - user
      summary: 피상담자 / 상담사 이메일 중복 확인 API
      security: 
      - X_API_KEY: []
      parameters: 
      - $ref: '#/components/parameters/emailQueryParam'
      responses:
        200:
          $ref: '#/components/responses/Success'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
          
  /admin/users:
    get:
      tags: 
      - admin
      summary: 어드민에서 피상담자 정보 리스트업 API
      security: 
      - X_API_KEY: []
      - X_API_USER_ID: []
      - X_ACCESS_TOKEN: []
      parameters: 
      - $ref: '#/components/parameters/pageQueryParam'
      - $ref: '#/components/parameters/sizeQueryParam'
      responses:
        200:
          description: 'Success'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Success'
                - type: object
                  properties:
                    result:
                      type: object
                      properties:
                        users:
                          type: array
                          items:
                            $ref: '#/components/schemas/user'
                
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
          
  /admin/partner:
    get:
      tags: 
      - admin
      summary: 어드민에서 상담사 정보 리스트업 API
      security: 
      - X_API_KEY: []
      - X_API_USER_ID: []
      - X_ACCESS_TOKEN: []
      parameters: 
      - $ref: '#/components/parameters/pageQueryParam'
      - $ref: '#/components/parameters/sizeQueryParam'
      - $ref: '#/components/parameters/evaluateQueryParam'
      responses:
        200:
          description: 'Success'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Success'
                - type: object
                  properties:
                    result:
                      type: object
                      properties:
                        partners:
                          type: array
                          items:
                            $ref: '#/components/schemas/partnerDetail'
                        totalCount:
                          type: integer
                          example: 10
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
          
  /admin/partner/{partnerId}:
    put:
      tags: 
      - admin
      summary: 어드민에서 상담사 정보 업데이트 API
      security: 
      - X_API_KEY: []
      - X_API_USER_ID: []
      - X_ACCESS_TOKEN: []
      parameters: 
      - $ref: '#/components/parameters/partnerIdPathParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/partnerDetail'
      responses:
        201:
          $ref: '#/components/responses/Updated'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        
  /partner:
    get:
      tags: 
      - partner
      summary: 상담사 정보 리스트업 API
      security: 
      - X_API_KEY: []
      parameters: 
      - $ref: '#/components/parameters/pageQueryParam'
      - $ref: '#/components/parameters/sizeQueryParam'
      - $ref: '#/components/parameters/genderQueryParam'
      - $ref: '#/components/parameters/levelQueryParam'
      - $ref: '#/components/parameters/certificateQueryParam'
      - $ref: '#/components/parameters/keywordQueryParam'
      responses:
        200:
          description: 'Success'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Success'
                - type: object
                  properties:
                    result:
                      type: object
                      properties:
                        partners:
                          type: array
                          items:
                            $ref: '#/components/schemas/partnerDetail'
                        totalCount:
                          type: integer
                          example: 10
        401:
          $ref: '#/components/responses/Unauthorized'
          
  /partner/signup:
    post:
      tags: 
      - partner
      summary: 상담사 회원 가입 API
      security: 
      - X_API_KEY: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/partner'
      responses:
        201:
          $ref: '#/components/responses/Created'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
  
  /keyword:
    get:
      tags: 
      - keyword
      summary: 키워드 정보 리스트 업 API
      security: 
      - X_API_KEY: []
      responses:
        200:
          description: 'Success'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Success'
                - type: object
                  properties:
                    result:
                      type: object
                      $ref: '#/components/schemas/keyword'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
  
  /point/charge:
    post:
      tags: 
      - point
      summary: 결제 후 포인트 충전 API
      security: 
      - X_API_KEY: []
      - X_API_USER_ID: []
      - X_ACCESS_TOKEN: []
      responses:
        200:
          $ref: '#/components/responses/Success'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
      
  /point/send:
    post:
      tags: 
      - point
      summary: 피상담자가 상담사의 상담권 구매시 사용 API
      security: 
      - X_API_KEY: []
      - X_API_USER_ID: []
      - X_ACCESS_TOKEN: []
      responses:
        200:
          $ref: '#/components/responses/Success'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
  
  /schedule/user:
    post:
      tags: 
      - schedule
      summary: 피상담자가 상담사의 상담 스케쥴 확정 API
      security: 
      - X_API_KEY: []
      - X_API_USER_ID: []
      - X_ACCESS_TOKEN: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userSchedule'
      responses:
        200:
          $ref: '#/components/responses/Success'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
          
  /schedule/partner:
    post:
      tags: 
      - schedule
      summary: 상담사가 본인의 상담 스케쥴 등록 API
      security: 
      - X_API_KEY: []
      - X_API_USER_ID: []
      - X_ACCESS_TOKEN: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/partnerSchedule'
      responses:
        200:
          $ref: '#/components/responses/Success'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
          
  /schedule/schedule/{partnerId}:
    get:
      tags: 
      - schedule
      parameters: 
      - $ref: '#/components/parameters/partnerIdPathParam'
      summary: 상담사의 스케쥴 정보 리스트업 API
      security: 
      - X_API_KEY: []
      - X_API_USER_ID: []
      - X_ACCESS_TOKEN: []
      responses:
        200:
          description: 'Success'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Success'
                - type: object
                  properties:
                    result:
                      type: object
                      properties:
                        schedules:
                          type: array
                          items:
                            $ref: '#/components/schemas/schedule'
                      
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'



components:
  responses:
    Success:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: success
              result:
                type: object 
                
    Created:
      description: Created Success
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Created Success
              result:
                type: object
                
    Updated:
      description: Updated Success
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Updated Success
              result:
                type: object
                
    Empty:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Empty Object
              result:
                type: object
                
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Bad Request
              result:
                type: object
                
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
              result:
                type: object
                
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Forbidden
              result:
                type: object
      
              
  schemas:
    Success:
      type: object
      properties:
        message:
          type: string
          example: 'Success'
        result:
          type: object
  
  
    signIn:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          example: Passw@rd
    
    user:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          example: Passw@rd
          writeOnly: true
        name:
          type: string
          example: 김모씨
        gender:
          type: integer
          example: 1
        age:
          type: integer
          example: 27
      required: 
      - email
      - password
      - name
      - gender
      - age
            
          
    partner:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          example: Passw@rd
          writeOnly: true
        name:
          type: string
          example: 김모씨
        phoneNumber:
          type: string
          example: 01012345678
        gender:
          type: integer
          example: 1
        age:
          type: integer
          example: 27
      required: 
      - email
      - password
      - name
      - phoneNumber
      - gender
      - age
          
    partnerDetail:
      type: object
      properties:
        id:
          type: integer
          example: 1
          readOnly: true
        email:
          type: string
          format: email
        password:
          type: string
          example: Passw@rd
          writeOnly: true
        name:
          type: string
          example: 김모씨
        phoneNumber:
          type: string
          example: 01012345678
        gender:
          type: integer
          example: 1
        age:
          type: integer
          example: 27
        url:
          type: string
          description: youtube url
        shortInfo:
          type: string
          description: 짧은 소개 글
          example: 당신의 지치고 힘든 마음을 치료해드려용
        career:
          type: string
          example: 마 내가 어디서 뭐했고 어디서 뭐했어 
        info:
          type: string
          description: 긴 소개 글
          example: 내 소개가 말이야 이러쿵 저러쿵 요로콤 저러콤
        chatCost:
          type: integer
          description: 채팅 시 가격
          example: 30000
        keyword:
          type: string
          example: 불안
        level:
          type: integer
          description: '상담사의 레벨 (1: Master, 2: Export, 3: Normal)'
          example: 1
        certificate:
          type: integer
          description: '상담사 자격증 (1: 1급, 2: 2급, 3: 무급)'
          example: 1
        image:
          type: string
        evaluate:
          type: string
          description: '상담사 검증 여부 검색 (True: 검증된 사람, False: 검증 안된사람)'
          example: true
          writeOnly: true
          
    schedule:
      type: object
      properties:
        scheduleId:
          type: integer
          example: 1
        reservation:
          type: boolean
          example: true
        startedAt:
          type: string
          example: '2020-07-25 12:00:00'
          
    userSchedule:
      type: object
      properties:
        partnerId:
          type: integer
          example: 1
        scheduleId:
          type: integer
          example: 12
          
    partnerSchedule:
      properties:
        schedules:
          type: array
          items:
            type: string
          example: ['2020-07-25 12:00:00', '2020-07-25 12:30:00', '2020-07-25 13:00:00']
    
    keyword:
      type: object
      properties:
        keyword:
          type: array
          items:
            type: string
          example: [우울, 저울, 행복, 연복]
  
  
  parameters:
    partnerIdPathParam:
      in: path
      name: partnerId
      required: true
      schema:
        type: integer
        example: 10
        
    pageQueryParam:
      in: query
      name: page
      schema:
        type: integer
        example: 1
        
    sizeQueryParam:
      in: query
      name: size
      schema:
        type: integer
        example: 15
        
    emailQueryParam:
      in: query
      name: email
      required: true
      schema:
        type: string
        example: example@email.com

    evaluateQueryParam:
      in: query
      name: evaluate
      description: '상담사 검증 여부 검색 (True: 검증된 사람, False: 검증 안된사람)'
      schema:
        type: boolean
        example: true
    
    genderQueryParam:
      in: query
      name: gender
      description: '성별 (1: 남자 2: 여자)'
      schema:
        type: integer
        example: 1
        
    levelQueryParam:
      in: query
      name: level
      description: '상담사의 레벨 (1: Master, 2: Export, 3: Normal)'
      schema:
        type: integer
        example: 1
        
    certificateQueryParam:
      in: query
      name: certificate
      description: '상담사 자격증 (1: 1급, 2: 2급, 3: 무급)'
      schema:
        type: integer
        example: 1
        
    keywordQueryParam:
      in: query
      name: keyword
      description: 키워드
      schema:
        type: string
        example: 불안
    
    
    
  
  securitySchemes:
    X_API_KEY:
      in: header
      type: apiKey
      name: x-api-key
    X_API_USER_ID:
      in: header
      type: apiKey
      name: x-api-userId
    X_ACCESS_TOKEN:
      in: header
      type: apiKey
      name: x-access-token
      
      







































